// Generated by CoffeeScript 1.4.0
(function() {
  var SimSpark, inspect, isArray, isString, pretty, sexp;

  inspect = require('util').inspect;

  sexp = require('./s-expression');

  pretty = function(obj) {
    return "" + (inspect(obj, false, 20, true));
  };

  isArray = function(obj) {
    return Array.isArray(obj);
  };

  isString = function(obj) {
    return !!(obj === '' || (obj && obj.charCodeAt && obj.substr));
  };

  exports.SimSpark = SimSpark = function(options) {
    if (options == null) {
      options = {};
    }
    return function(onConnected) {
      var closeHandler, dataHandler, errorHandler, host, port, receive, s, _ref, _ref1, _ref2;
      if (onConnected == null) {
        onConnected = function() {};
      }
      host = (_ref = options.host) != null ? _ref : '127.0.0.1';
      port = (_ref1 = options.port) != null ? _ref1 : 3100;
      receive = (_ref2 = options.receive) != null ? _ref2 : function() {};
      dataHandler = function(data) {
        var len, msg, msgString;
        console.log("data sent by server: " + data);
        len = msgPacket.readInt32LE(msgString.length, 0);
        msgString = msgPacket.toString('ascii', 4, len);
        return msg = sexp(msgString);
      };
      closeHandler = function() {
        return console.log('Connection closed');
      };
      errorHandler = function(err) {
        return console.log("" + err);
      };
      s = new net.Socket();
      console.log("trying to connect to " + host + ":" + port);
      s.connect(port, host, function() {
        console.log("CONNECTED TO: " + host + ":" + port);
        client.write('I am Chuck Norris!');
        return onConnected({
          send: function(messages) {
            var msg, msgPacket, msgString, _i, _len, _results;
            if (messages == null) {
              messages = [];
            }
            console.log("sending messages:");
            _results = [];
            for (_i = 0, _len = messages.length; _i < _len; _i++) {
              msg = messages[_i];
              msgString = sexp(msg);
              msgPacket = new Buffer(4 + msgString.length);
              msgPacket.writeInt32LE(msgString.length, 0);
              msgPacket.write(msgString, 4, 'ascii');
              console.log("msgPacket: \"" + msgPacket + "\"");
              console.log("msgPacket len: " + msgPacket.length);
              _results.push(s.write(msgPacket));
            }
            return _results;
          }
        });
      });
      s.on('error', errorHandler);
      s.on('data', dataHandler);
      s.on('close', closeHandler);
    };
  };

}).call(this);
