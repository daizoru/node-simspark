// Generated by CoffeeScript 1.4.0
(function() {
  var S, inspect, isArray, isString, readString;

  inspect = require('util').inspect;

  isArray = function(obj) {
    return Array.isArray(obj);
  };

  isString = function(obj) {
    return !!(obj === '' || (obj && obj.charCodeAt && obj.substr));
  };

  /*
  
  (
    (time (now 6671.45))
    (GS (t 0.00) (pm BeforeKickOff))
    (GYR (n torso) (rt 0.00 -0.00 -0.00))
    (ACC (n torso) (a 0.00 0.00 0.00))
    (HJ (n hj1) (ax -0.00))
    (HJ (n hj2) (ax -0.00))
    (See 
      (F1L (pol 18.67 53.80 -5.10))
      (F1R (pol 18.69 -53.75 -5.00))
      (B (pol 1.89 0.13 -58.22)) 
      (L (pol 1.90 -0.13 -60.02) (pol 11.12 -0.17 -8.59)) 
      (L (pol 17.42 -59.92 -5.59) (pol 18.69 -53.62 -4.95)) 
      (L (pol 17.43 60.03 -5.38) (pol 18.69 53.91 -5.13)) 
      (L (pol 18.69 -53.73 -4.89) (pol 18.68 53.72 -5.07))
      (L (pol 2.79 -60.05 -36.00) (pol 3.17 -36.69 -31.45)) 
      (L (pol 3.18 -36.88 -31.21) (pol 3.39 -12.15 -28.84)) 
      (L (pol 3.39 -12.21 -29.32) (pol 3.40 11.89 -28.83)) 
      (L (pol 3.39 11.83 -29.04) (pol 3.17 36.76 -30.98)) 
      (L (pol 3.17 36.76 -31.20) (pol 2.79 60.03 -36.14))
    )
    (HJ (n raj1) (ax 0.00))
    (HJ (n raj2) (ax 0.00))
    (HJ (n raj3) (ax 0.00))
    (HJ (n raj4) (ax -0.00))
    (HJ (n laj1) (ax 0.00))
    (HJ (n laj2) (ax -0.00))
    (HJ (n laj3) (ax -0.00))
    (HJ (n laj4) (ax 0.00))
    (HJ (n rlj1) (ax 0.00))
    (HJ (n rlj2) (ax 0.00))
    (HJ (n rlj3) (ax -0.00))
    (HJ (n rlj4) (ax -0.00))
    (HJ (n rlj5) (ax -0.00))
    (HJ (n rlj6) (ax 0.00))
    (HJ (n llj1) (ax 0.00))
    (HJ (n llj2) (ax 0.00))
    (HJ (n llj3) (ax -0.00))
    (HJ (n llj4) (ax -0.00))
    (HJ (n llj5) (ax -0.00))
    (HJ (n llj6) (ax 0.00))
  )
  */


  readString = function(p) {
    p = p.replace(/\s+/g, ', ').replace(/\)\(/g, '), (').replace(/\(/g, '[').replace(/\)/g, ']').replace(new RegExp("([a-zA-Z][a-zA-Z0-9]*)", "gi"), "\"$1\"");
    return p;
  };

  module.exports = S = function(p) {
    var e, s;
    if (isString(p)) {
      return eval(readString(p));
    } else {
      if (isArray(p)) {
        s = (function() {
          var _i, _len, _results;
          _results = [];
          for (_i = 0, _len = p.length; _i < _len; _i++) {
            e = p[_i];
            if (isArray(e)) {
              _results.push(S(e));
            } else {
              _results.push("" + e);
            }
          }
          return _results;
        })();
        return "(" + (s.join(' ')) + ")";
      }
    }
  };

}).call(this);
