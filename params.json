{"name":"node-simspark","tagline":"Node interface to SimSpark, the simulator used for the RoboCup 3D Soccer Simulation League","body":"node-simspark\r\n=============\r\n\r\nNode interface to SimSpark, the simulator used for the RoboCup 3D Soccer Simulation League\r\n\r\n## Installation\r\n\r\n    $ npm install simspark\r\n\r\n## Summary\r\n\r\n```JavaScript\r\nvar SimSpark = require('simspark')\r\n\r\nvar sim = new SimSpark()\r\n// by default, this is equivalent to:  new SimSpark(\"localhost\", 3100)\r\n\r\n// event fired once we are connected to the server and can send/receive msg\r\nsim.on('connect', function() {\r\n\r\n  // send a message to the simulator. The message must be in SimSpark's s-expression format:\r\n  // http://simspark.sourceforge.net/wiki/index.php/Network_Protocol\r\n  sim.send([\r\n\r\n    // here we init the scene using the nao agent model\r\n    [\"scene\", \"rsg/agent/nao/nao.rsg\"],\r\n\r\n    // spawn our robot, assigning it to a team and a number\r\n    [\"init\", [\"unum\", 1], [\"teamname\", \"BIG\"]]\r\n  ])\r\n\r\n})\r\n\r\n// event fired when the game state is updated\r\n// events keys are lowercased to make it consistent and easier to remember\r\nsim.on('gs', function (args) {\r\n\r\n\r\n})\r\n\r\n// server time\r\nsim.on('time', function (args) {\r\n\r\n})\r\n\r\n// agent state\r\nsim.on('agentstate', function (args) {\r\n\r\n  var temperature = args[0][1]\r\n  var battery     = args[1][1]\r\n\r\n})\r\n\r\n// Force-resistance sensor\r\nsim.on('frp', function (args) {\r\n\r\n})\r\n\r\n// Gyroscope sensor\r\nsim.on('gyr', function (args) {\r\n\r\n})\r\n\r\n// Accelerometer sensor\r\nsim.on('acc', function (args) {\r\n\r\n})       \r\n\r\n// What the robot \"see\" (not an image, but semantic information)\r\nsim.on('see', function (args) {\r\n\r\n})\r\n\r\n// Hinge Joint\r\nsim.on('hj', function (args) {\r\n\r\n})\r\n\r\n// normal close\r\nsim.on('close', function () {\r\n\t// handle close\r\n})\r\n\r\n// network error\r\nsim.on('error', function (err) {\r\n\r\n})\r\n```\r\n\r\n## TODO\r\n\r\n * Support all the kind of messages\r\n * Add an example of using the Monitor API, see: http://simspark.sourceforge.net/wiki/index.php/Network_Protocol#Server.2FMonitor_Communication\r\n\r\n## Changelog\r\n\r\n#### 0.0.4\r\n\r\n * Events are now emitted directly\r\n * Rewrote example to JS to make it \"more readable\"\r\n\r\n#### 0.0.3\r\n\r\n * ???\r\n\r\n#### 0.0.2\r\n\r\n * removed console.logs\r\n\r\n#### 0.0.1\r\n\r\n * removed auto-initalization of code\r\n\r\n#### 0.0.0\r\n\r\n * initial version\r\n * basic streaming API\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}